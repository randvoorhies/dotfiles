# ~/.bashrc: executed by bash(1) for non-login shells.

TERM=xterm-256color

RESTORE='\[\e[0m\]'

RED='\[\e[00;31m\]'
GREEN='\[\e[00;32m\]'
YELLOW='\[\e[00;33m\]'
BLUE='\[\e[00;34m\]'
PURPLE='\[\e[00;35m\]'
CYAN='\[\e[00;36m\]'
LIGHTGRAY='\[\e[00;37m\]'

LRED='\[\e[01;31m\]'
LGREEN='\[\e[01;32m\]'
LYELLOW='\[\e[01;33m\]'
LBLUE='\[\e[01;34m\]'
LPURPLE='\[\e[01;35m\]'
LCYAN='\[\e[01;36m\]'
WHITE='\[\e[01;37m\]'

#RESTORE='\[\e[0m\]'
#RED='\033[00;31m'
#GREEN='\033[00;32m'
#YELLOW='\033[00;33m'
#BLUE='\033[00;34m'
#PURPLE='\033[00;35m'
#CYAN='\033[00;36m'
#LIGHTGRAY='\033[00;37m'
#
#LRED='\033[01;31m'
#LGREEN='\033[01;32m'
#LYELLOW='\033[01;33m'
#LBLUE='\033[01;34m'
#LPURPLE='\033[01;35m'
#LCYAN='\033[01;36m'
#WHITE='\033[01;37m'

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# Run bash in vi mode
set -o vi

# Edit everything in vim
export EDITOR=vim

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Turn off XON/XOFF flow control so that ctrl-s works
stty -ixon

export GIT_PS1_SHOWDIRTYSTATE=1

__is_remote() 
{
  if df -l . &> /dev/null
  then
    __git_ps1
  else
    echo -n " (::remotefs::)"
  fi
  echo -ne ""
}

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
if [ "$(whoami)" = root ]; then
  PS1='${debian_chroot:+($debian_chroot)}[\[\033[01;31m\]\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]]# '
else
  ## Show the path, but replace the middle with ellipses if it is too long.
  export MYPS='$(echo -n "${PWD/#$HOME/\~}" | awk -F "/" '"'"'{
  if (length($0) > 14) { if (NF>4) print $1 "/" $2 "/.../" $(NF-1) "/" $NF;
    else if (NF>3) print $1 "/" $2 "/.../" $NF;
    else print $1 "/.../" $NF; }
    else print $0;}'"'"')'

      case ${HOSTNAME} in
        "mercury")  HOSTCOLOR=${YELLOW};;
        "mercury2") HOSTCOLOR=${RED};;
        *)          HOSTCOLOR=${GREEN};;
      esac

  PS1="${HOSTCOLOR}\u@\h${RESTORE}:${BLUE}${MYPS}${RED}"'$(__is_remote)'"${RESTORE}$ "
fi

export LS_COLORS='di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*.rpm=90'
# export CLICOLOR=1

# Turn on bash completion
if [ -f /etc/bash_completion ]; then
 . /etc/bash_completion
fi

if [ -f /opt/ros/indigo/setup.bash ]
then
  source /opt/ros/indigo/setup.bash 
  #export OGRE_RTT_MODE=FBO
fi

source ~/.envrc
source ~/.aliasrc

if [ -f ${HOME}/.pathrcc ];
then
  source ~/.pathrcc
fi

source ~/.rosbash
source ~/.bashfunctions
source ~/.git-completion.bash
source ~/.git-prompt.sh

declare -A ros_masters=(["localhost"]="http://localhost:11311" ["alexis"]="http://alexis:11311")
ros_master_select()
{
  if [ -z "$1" ]
  then
    echo "Available masters: ${!ros_masters[@]}"
  else
    selected_master=${ros_masters[$1]}
    if [ -z "${selected_master}" ]
    then
      echo "ROS Master '${1}' not found. Available masters: ${!ros_masters[@]}"
      return
    fi

    export ROS_MASTER_URI=${selected_master}

  fi
}
_ros_master_select()
{
  local masters=${!ros_masters[@]}
  local cur=${COMP_WORDS[COMP_CWORD]}
  COMPREPLY=( $(compgen -W "$masters" -- $cur) )
}
complete -F _ros_master_select ros_master_select
#export ROS_MASTER_URI=http://IRIS1:11311

ROSLAUNCH_SSH_UNKNOWN=1

export PATH=${PATH}:${HOME}/.bin

# added by travis gem
[ -f /home/rand/.travis/travis.sh ] && source /home/rand/.travis/travis.sh

# vim:syntax=sh
